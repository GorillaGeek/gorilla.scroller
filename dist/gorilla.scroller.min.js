window.gorilla||(window.gorilla={}),function(e,i){function t(){var i=a.find("section"),t=0;i.each(function(){var n=e(this);n.find("section").size()>0||(h.add(n,t,i.length),t++)}),h[0].active(!0)}function n(){var i,t,n=null;e(window).mousewheel(function(){return clearTimeout(i),t=h.current(),null===n&&(n=t.elem.scrollTop()),event.deltaY>0?void(i=setTimeout(function(){t.hasScroll()&&n!==t.elem.scrollTop()||r(),n=null},f.scrollDelay)):void(i=setTimeout(function(){t.hasScroll()&&n!==t.elem.scrollTop()||l(),n=null},f.scrollDelay))})}function o(){var i=function(){e("body").addClass("gorilla-scroller"),d&&h[0].active(!0),d=!1},t=function(){d=!0,e("body").removeClass("gorilla-scroller")},n=null;e(window).resize(function(){clearTimeout(n),n=setTimeout(function(){return"function"==typeof f.disable?f.disable()?void t():void i():f.disable?void t():void i()},100)}),e(window).trigger("resize")}function r(){var e=h.current();!d&&e.isScrollOnBottom()&&e.next()&&e.active(!1)}function l(){var e=h.current();!d&&e.isScrollOnTop()&&e.prev()&&e.prev().active(!0)}function s(){u=e("<nav class='gorilla-scroller-navigation' />");var i=e("<ul />");h.forEach(function(t){var n=e("<li />"),o=e("<a />");o.attr({section:t.index});var r=t.elem.parents("section");r.size()>0&&r.find("section:first-child")[0]!==t.elem[0]||(n.append(o),i.append(n))}),u.css({"z-index":h.length+f.zIndex+2}),u.append(i),a.append(u),u.on("click","a",function(){h.find(e(this).attr("section")).active(!0)}),setTimeout(function(){u.height(i.height()),c()},0)}function c(){if(u){var e,i=h.current(),t=i.index;do if(e=u.find("[section="+t+"]"),t--,-1>t)throw"Gorilla Scroller: Navigation link not found";while(0===e.size());u.removeClass(function(e,i){return(i.match(/(^|\s)active-\S+/g)||[]).join(" ")}),u.addClass("active-"+i.index),u.find("li").removeClass("active active-sub"),u.find("li").removeClass(function(e,i){return(i.match(/(^|\s)active-\S+/g)||[]).join(" ")});var n="active";i.isChild()&&(n+=" active-sub active-"+i.parentIndex),e.parents("li").addClass(n)}}var a,u,d=!1,f={zIndex:0,scrollDelay:300,showNavigation:!0,disable:!1,callback:function(e,i){}},h=[];h.add=function(e,i,t){h.push(new v(e,i,t-i+f.zIndex))},h.current=function(){return h.filter(function(e){return e.is(a.find(".gorilla-scroller-active").first())})[0]},h.find=function(e){var i=a.find(".gorilla-scroller-section[section="+e+"]");return i.size()?h.filter(function(e){return e.is(i)})[0]:null},Scroller=function(i,t){this.init(e(i),t||{})},i.scroller=Scroller,e.fn.gorillaScroller=function(e){return new i.scroller(this,e)},Scroller.prototype.init=function(i,r){a=i,e.extend(f,r),e("body").addClass("gorilla-scroller"),a.addClass("gorilla-scroller-root"),t(),n(),f.showNavigation&&s(),o()},Scroller.prototype.active=function(e){var i=h.find(e);if(!i)throw"Gorilla Scroller: Section not found";i.active(!0)},Scroller.prototype.disabled=function(){return d};var v=function(e,i,t){this.elem=e,this.index=i,this.parentIndex=0,this.isChild()&&e.parents("section").find(".gorilla-scroller-section").each(function(e,i){return this.is(i)?!1:void this.parentIndex++}.bind(this)),e.addClass("gorilla-scroller-section gorilla-scroller-section-"+i),e.attr("section",i),e.css({"z-index":t})};v.prototype.is=function(i){return this.elem[0]===e(i)[0]},v.prototype.isChild=function(){return this.elem.parents("section").size()>0},v.prototype.hasScroll=function(){return this.elem[0].scrollHeight-this.elem.outerHeight()>0},v.prototype.isScrollOnTop=function(){return!this.hasScroll()||0===this.elem.scrollTop()},v.prototype.isScrollOnBottom=function(){return!this.hasScroll()||this.elem.scrollTop()>=this.elem[0].scrollHeight-this.elem.outerHeight()},v.prototype.active=function(e,i){if(!i)if(e)f.callback("current",{section:this.index,elem:this.elem});else{var t=this.next();f.callback("current",{section:t.index,elem:t.elem})}return e?(this.elem.addClass("gorilla-scroller-active"),this.next()&&this.next().active(!0,!0),!i&&this.prev()&&this.prev().active(!1,!0),void c(this.index)):(this.elem.removeClass("gorilla-scroller-active"),i&&this.prev()&&this.prev().active(!1,!0),void c(this.index))},v.prototype.prev=function(){return h.find(this.index-1)},v.prototype.next=function(){return h.find(this.index+1)}}(jQuery,window.gorilla);
//# sourceMappingURL=data:application/json;base64,
