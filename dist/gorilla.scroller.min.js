window.gorilla||(window.gorilla={}),function(e,t){function i(){var t=c.find("> section");t.each(function(i){d.add(e(this),i,t.length)}),d[0].active(!0)}function n(){var t,i,n=null;e(window).mousewheel(function(){return clearTimeout(t),i=d.current(),null===n&&(n=i.elem.scrollTop()),event.deltaY>0?void(t=setTimeout(function(){i.hasScroll()&&n!==i.elem.scrollTop()||l(),n=null},u.scrollDelay)):void(t=setTimeout(function(){i.hasScroll()&&n!==i.elem.scrollTop()||r(),n=null},u.scrollDelay))})}function l(){var e=d.current();e.isScrollOnBottom()&&e.next()&&e.active(!1)}function r(){var e=d.current();e.isScrollOnTop()&&e.prev()&&e.prev().active(!0)}function o(){a=e("<nav class='gorilla-scroller-navigation' />");var t=e("<ul />");d.forEach(function(i){var n=e("<li />"),l=e("<a />");l.attr({section:i.index}),n.append(l),t.append(n)}),a.css({"z-index":d.length+u.zIndex}),a.append(t),c.append(a),a.on("click","a",function(){d.find(e(this).attr("section")).active(!0)}),setTimeout(function(){a.height(t.height()),s()},0)}function s(){if(a){var e=d.current();a.find("li").removeClass("active"),a.find("[section="+e.index+"]").parents("li").addClass("active")}}var c,a,u={zIndex:0,scrollDelay:300};t.scroller=function(t,i){this.init(e(t),i||{})},e.fn.gorillaScroller=function(e){return new t.scroller(this,e)};var d=[];d.add=function(e,t,i){d.push(new h(e,t,i-t+u.zIndex))},d.current=function(){return d.filter(function(e){return e.is(c.find(".gorilla-scroller-active").first())})[0]},d.find=function(e){var t=c.find("#gorilla-scroller-section-"+e);return t.size()?d.filter(function(e){return e.is(t)})[0]:null},t.scroller.prototype.init=function(t,l){c=t,e.extend(u,l),e("body").addClass("gorilla-scroller"),c.addClass("gorilla-scroller-root"),i(),n(),o(c)};var h=function(e,t,i){this.elem=e,this.index=t,e.addClass("gorilla-scroller-section gorilla-scroller-section-"+t),e.attr("id","gorilla-scroller-section-"+t),e.css({"z-index":i})};h.prototype.is=function(t){return this.elem[0]===e(t)[0]},h.prototype.hasScroll=function(){return this.elem[0].scrollHeight-this.elem.height()>0},h.prototype.isScrollOnTop=function(){return!this.hasScroll()||0===this.elem.scrollTop()},h.prototype.isScrollOnBottom=function(){return!this.hasScroll()||this.elem.scrollTop()>=this.elem[0].scrollHeight-this.elem.height()},h.prototype.active=function(e,t){return e?(this.elem.addClass("gorilla-scroller-active"),this.next()&&this.next().active(!0,!0),!t&&this.prev()&&this.prev().active(!1,!0),void s(this.index)):(this.elem.removeClass("gorilla-scroller-active"),t&&this.prev()&&this.prev().active(!1,!0),void s(this.index))},h.prototype.prev=function(){return d.find(this.index-1)},h.prototype.next=function(){return d.find(this.index+1)}}(jQuery,window.gorilla);
//# sourceMappingURL=data:application/json;base64,
