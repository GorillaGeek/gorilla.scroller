window.gorilla||(window.gorilla={}),function(i,e){function n(){var e=s.find("> section");e.each(function(n){d.add(i(this),n,e.length)})}function t(){var e;i(window).mousewheel(function(){return clearTimeout(e),event.deltaY>0?void(e=setTimeout(function(){o()},u.scrollDelay)):void(e=setTimeout(function(){r()},u.scrollDelay))})}function o(){var i=d.current();i.isScrollOnBottom()&&i.next()&&i.active(!1)}function r(){var i=d.current();i.isScrollOnTop()&&i.prev()&&i.prev().active(!0)}function l(){a=i("<nav class='gorilla-scroller-navigation' />");var e=i("<ul />");d.forEach(function(n){var t=i("<li />"),o=i("<a />");o.attr({section:n.index}),t.append(o),e.append(t)}),a.css({"z-index":d.length+u.zIndex}),a.append(e),s.append(a),setTimeout(function(){a.height(e.height()),c()},0)}function c(){if(a){var i=d.current();console.log(i.index),a.find("li").removeClass("active"),a.find("[section="+i.index+"]").parents("li").addClass("active")}}var s,a,u={zIndex:0,scrollDelay:300};e.scroller=function(e,n){this.init(i(e),n||{})},i.fn.gorillaScroller=function(i){return new e.scroller(this,i)};var d=[];d.add=function(i,e,n){d.push(new f(i,e,n-e+u.zIndex))},d.current=function(){return d.filter(function(i){return i.is(s.find(".gorilla-scroller-active").first())})[0]},d.find=function(i){var e=s.find("#gorilla-scroller-section-"+i);return e.size()?d.filter(function(i){return i.is(e)})[0]:null},e.scroller.prototype.init=function(e,o){s=e,i.extend(u,o),i("body").addClass("gorilla-scroller"),s.addClass("gorilla-scroller-root"),n(),t(),l(s)};var f=function(i,e,n){this.elem=i,this.index=e,this.active(!0),i.addClass("gorilla-scroller-section gorilla-scroller-section-"+e),i.attr("id","gorilla-scroller-section-"+e),i.css({"z-index":n})};f.prototype.is=function(e){return this.elem[0]===i(e)[0]},f.prototype.isScrollOnTop=function(){return 0===this.elem.scrollTop()},f.prototype.isScrollOnBottom=function(){return this.elem.scrollTop()>=this.elem[0].scrollHeight-this.elem.height()},f.prototype.active=function(i){return i?(this.elem.addClass("gorilla-scroller-active"),void c(this.index)):(this.elem.removeClass("gorilla-scroller-active"),void c(this.index))},f.prototype.prev=function(){return d.find(this.index-1)},f.prototype.next=function(){return d.find(this.index+1)}}(jQuery,window.gorilla);
//# sourceMappingURL=data:application/json;base64,
